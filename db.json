{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/aircloud/source/css/aircloud.css","path":"css/aircloud.css","modified":0,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.css.map","path":"css/aircloud.css.map","modified":0,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.less","path":"css/aircloud.less","modified":0,"renderable":1},{"_id":"themes/aircloud/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/aircloud/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/aircloud/source/js/index.js","path":"js/index.js","modified":0,"renderable":1},{"_id":"source/img/donate.jpg","path":"img/donate.jpg","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1709126435351},{"_id":"source/about/index.md","hash":"801120295eb9fbeccffce84bc1c413562ecd069d","modified":1709126435368},{"_id":"source/_posts/CentOS7下安装和配置redis.md","hash":"e53a5b4afd3d90f715a8b9030c4a986e5344e06a","modified":1709126435351},{"_id":"source/_posts/CentOS安装node8-x版本.md","hash":"776b542ec2cae546a2361b0e40af4afa00381678","modified":1709126435355},{"_id":"source/_posts/Deno 是如何运行 TypeScript 的.md","hash":"eed598e22f05dd39d4576b7a4ca2660d15fb67a7","modified":1709126435356},{"_id":"source/_posts/JS的静态作用域、子程序引用环境与参数传递类型.md","hash":"ba283c07507ab0590027cd2c74eac852273cb114","modified":1709126435356},{"_id":"source/_posts/Linux服务器初始化设置用户和ssh公私钥登陆.md","hash":"a44d6e0fc9bc3e4e6dd8aa154ca16e5b5c351ec6","modified":1709126435356},{"_id":"source/_posts/Node-js的TCP链接管理.md","hash":"b1aa03cc318da116e7a98a1d4d758323a0bf120a","modified":1709126435356},{"_id":"source/_posts/PWA实践-serviceWorker生命周期、请求代理与通信.md","hash":"adeb78666ec3b904327a7da642d97e1aa7bc47a8","modified":1709126435356},{"_id":"source/_posts/ReactConf2021.md","hash":"6733dfe17a07c3a2cc54dfd88fb5e4e16873306e","modified":1709126435356},{"_id":"source/_posts/Rust初探-实现二叉树的增删与遍历.md","hash":"571c389e7d053169386e96f4927815e09798e631","modified":1709126435357},{"_id":"source/_posts/centOS7-2搭建nginx环境以及负载均衡.md","hash":"85d4aab9a1f6ed11ce61361ef9717d610ef9a29f","modified":1709126435357},{"_id":"source/_posts/dva源码解读.md","hash":"0201515818b0804b834493745f8d9ef1226998cb","modified":1709126435357},{"_id":"source/_posts/electron可能不是你的解药.md","hash":"26bc9fe5efc6a5dc296f67c901d5dda72edf32cd","modified":1709126435357},{"_id":"source/_posts/fst-json.md","hash":"899b43bdfc2288fb4bf7cb63dc9940777d6fc01c","modified":1709126435358},{"_id":"source/_posts/python调用Rust.md","hash":"a9468facbc1388ff9d0c21ae142219b82018c449","modified":1709126435358},{"_id":"source/_posts/qlc解决了什么问题.md","hash":"a6c5884ed9e4cd8c14481b5cc31d2c680c309fa0","modified":1709126435358},{"_id":"source/_posts/type-challenges.md","hash":"3fab171b1390e3ac0ac80163b2bfc671602b2ea3","modified":1709126435358},{"_id":"source/_posts/web应用开发与部署——你必须掌握的内容.md","hash":"512d25b866c6d546aa9bf158f2ae4fc6dd44b4a2","modified":1709126435359},{"_id":"source/_posts/web跨端融合方案浅析.md","hash":"3bb883e9490f435e603a8f1f0ebf03ff08b8514a","modified":1709126435359},{"_id":"source/_posts/《代码精进之路》与《代码整洁之道》读书笔记.md","hash":"d61af426f4ce4050d40765bf962243b01ea3852d","modified":1709126435359},{"_id":"source/_posts/一些代码提交MR的重点关注内容整理.md","hash":"126f386810d1b34ce08bebfec56ca0c8ded7d10a","modified":1709126435359},{"_id":"source/_posts/一些性能相关的 JavaScript 代码编写建议规范.md","hash":"385799f3ec03a2d0a25c4b0f061ffbaf56a485a7","modified":1709126435360},{"_id":"source/_posts/一篇关于react历史的流水账.md","hash":"0d46f06af45c4a61eb4249420202668849564554","modified":1709126435360},{"_id":"source/_posts/了解 StackOverFlow 上面最受欢迎的语言 Rust.md","hash":"1bcaa77bab32ca6ca0b85dcaa7364eeed9703766","modified":1709126435360},{"_id":"source/_posts/从源码分析sentry的错误信息收集.md","hash":"7358596ed8d590b0fee479f81826b184fd32a56d","modified":1709126435360},{"_id":"source/_posts/代码整洁之道.md","hash":"235e7d40c6bd3976e0443cfc0a6067e6dc60d87d","modified":1709126435361},{"_id":"source/_posts/使用 Node.js 打造多用户实时监控系统.md","hash":"3b2bd4019718174d8a3fce05c7cb3c52a0f9910a","modified":1709126435361},{"_id":"source/_posts/使用OpenCV实现简单的人脸识别程序.md","hash":"d7d1d66044152805a231b4f8cbacc73c06b52836","modified":1709126435361},{"_id":"source/_posts/使用RustWebAssembly0拷贝进行计算加速.md","hash":"76b6368653186caccf7eacbbaa912e130a35fe5b","modified":1709126435362},{"_id":"source/_posts/使用k8s容器化运行端对端测试用例.md","hash":"0452940c31458d17da95e3c2dabdc129459f3c5b","modified":1709126435362},{"_id":"source/_posts/入门WebAssembly以及使用其进行图像卷积处理.md","hash":"9a7267f266cb01240016a713f465e540985a9500","modified":1709126435362},{"_id":"source/_posts/关于JupyterSession优化问题的设计方案.md","hash":"0b3acbbca145992bc39911a7b92951d35119c4f5","modified":1709126435363},{"_id":"source/_posts/十条编写优化的JavaScript代码的建议.md","hash":"2ada7d41fff98ea1a80eb8601fdb7b5448d8c5d7","modified":1709126435363},{"_id":"source/_posts/基于container架构的前端应用.md","hash":"6dc5105b87c8e54b24adb25ae27f4d7ccfc0422c","modified":1709126435363},{"_id":"source/_posts/多组件单页列表应用的代码组织实践.md","hash":"444ab2e467431ed018c752b7cb301f33d7f0ac05","modified":1709126435363},{"_id":"source/_posts/如何让你的精力更多的用于提高技术深度.md","hash":"6b48c1f85a924e23daefb001cf49ef844444247c","modified":1709126435364},{"_id":"source/_posts/构建利用Proxy和Reflect实现双向数据绑定的微框架.md","hash":"e9cdaaacbf7f265262cc9ad527716ca8b32573eb","modified":1709126435365},{"_id":"source/_posts/架构整洁之道-读书笔记.md","hash":"19428f1d1039cad61465aabb70ce67c9e9423535","modified":1709126435365},{"_id":"source/_posts/浅谈前端中的二进制数据类型.md","hash":"750120163d9eee8ed821ced7e47c043bbfa6b537","modified":1709126435366},{"_id":"source/_posts/深入Vue源代码解决时序问题一.md","hash":"d4cacd38879d566c964163e2ac58f8013f7e11a6","modified":1709126435366},{"_id":"source/_posts/深入浏览器web渲染与优化-续.md","hash":"917308065bce9eada9020f3122f1a24d8cf0c7e5","modified":1709126435366},{"_id":"source/_posts/深入浏览器web渲染与优化.md","hash":"4d8b47d007a6f60f31bcf7f795f395d05989e87c","modified":1709126435367},{"_id":"source/_posts/生产环境禁用console的意义.md","hash":"5a106bc06bfc291481d1a3fbd29fb16bc29627cb","modified":1709126435367},{"_id":"source/_posts/腾讯云北美服务器搭建ShadowSocks代理.md","hash":"4eda1931844f13433d0f40b0df5ede73bec9a68f","modified":1709126435367},{"_id":"source/_posts/通过压缩合成层优化性能.md","hash":"ed942c8d982c1bf78c925cbd83eb4317e3a86ae5","modified":1709126435368},{"_id":"source/_posts/重构-读书笔记.md","hash":"83283beed96ca601f86582a442865b996ad153b7","modified":1709126435368},{"_id":"source/collect/index.md","hash":"e2da1d4235ba90fc36eb86d7d923cb08197e27cb","modified":1709126435369},{"_id":"source/tags/index.md","hash":"4e3dfcd992b0772a4b8b034fe41ead1cc7ce9903","modified":1709126435395},{"_id":"source/img/2.jpg","hash":"2f5b0345c366a264ed5b685e464a84e592ac0017","modified":1709126435370},{"_id":"source/img/favicon.ico","hash":"6f27a4daac35d93ae3087e8ede4f03c4adf928b0","modified":1709128186876},{"_id":"source/img/cv1.jpg","hash":"2160c839498ddf205bdbeb0d612da9338fc39500","modified":1709126435382},{"_id":"source/img/rust_2020.png","hash":"984be894ed46cbff37eda0674b516e522c93f7d6","modified":1709126435394},{"_id":"source/img/rust_2021.png","hash":"8385e16679f951f548f8a6db6daabe087a3b65ef","modified":1709126435394},{"_id":"source/img/1.jpg","hash":"f667d88d44741ff7b92ee9db5f1994bbcc05311c","modified":1709126435369},{"_id":"source/img/calling_rust_from_python_std_ffi_and_ctypes.png","hash":"6815b9d148f214c78adaea53d73fbba8c5e5b99f","modified":1709126435374},{"_id":"source/img/chrome_fiber.png","hash":"daa5f0e4fe8b448524d3061917bd5640952b1563","modified":1709126435376},{"_id":"source/img/chrome_monitor.png","hash":"e947fec74c3c3947a1cbfb7c0ce888bc758a2dc5","modified":1709126435377},{"_id":"source/img/composite_cpu_1.png","hash":"d8ddd2cfe2f4d90441677d87e8620c07bd722e3a","modified":1709126435379},{"_id":"source/img/composite_cpu_2.png","hash":"7f8c08373b4c700ea123beb00f13f20bff9de243","modified":1709126435380},{"_id":"source/img/jupyter_cell1.png","hash":"bf110856152f719dac7dfd11cc2796c1294ac53c","modified":1709126435387},{"_id":"source/img/jupyter_frontend_kernel.webp","hash":"cbf7734de22c9fdbcbe457fd3e96791a4dfc6091","modified":1709126435387},{"_id":"source/img/ker1.jpg","hash":"708e619ae0ad4524c41665f9930d3b8240d9ddcd","modified":1709126435393},{"_id":"source/img/3.jpg","hash":"2de0cbd6ef6695f024865eb614e849641d369b87","modified":1709126435371},{"_id":"source/img/absapp.png","hash":"01e684c578bdaf6a37717fa88a87091be7713b92","modified":1709126435372},{"_id":"source/img/chrome_task_manager.png","hash":"5602fecce6c85a95c149977fab808e1934d995e4","modified":1709126435378},{"_id":"source/img/composite_reason.png","hash":"1004d9d9fd3cdcebf508bd665890dbdf0b277fce","modified":1709126435381},{"_id":"source/img/avatar.jpg","hash":"5304e3982426a771746874abc1e70bc93261e197","modified":1709126435373},{"_id":"source/img/kds.jpg","hash":"70558c28dbc717528049673f7653804596e45fde","modified":1709126435393},{"_id":"source/img/chrome_detach_console.png","hash":"fa7059de304dcb92c6a4e7471c9dbc3c94885f65","modified":1709126435376},{"_id":"themes/aircloud/layout/catagory.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437110},{"_id":"themes/aircloud/layout/page.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437111},{"_id":"themes/aircloud/source/_less/about.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437113},{"_id":"themes/aircloud/source/_less/diff.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437113},{"_id":"themes/aircloud/source/_less/page.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437114},{"_id":"themes/aircloud/source/_less/theme.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709126437115},{"_id":"themes/aircloud/.gitignore","hash":"84a048e1a1c7dd770ada920581d096f3179e76cc","modified":1709126437108},{"_id":"themes/aircloud/LICENSE","hash":"218b4bf797149a2751a015812a9adefe368185c1","modified":1709126437108},{"_id":"themes/aircloud/_config.yml","hash":"0ad3a6ab2c9bb07fb1e030052622fdcde5c6f28a","modified":1709126437108},{"_id":"themes/aircloud/readme-en.md","hash":"26ea5c998b0c1f1947fbae5313b722bcf57ea7fe","modified":1709126437111},{"_id":"themes/aircloud/readme.md","hash":"ad93586ecc04f19c51200f1e6aa3ead040abd71a","modified":1709126437112},{"_id":"themes/aircloud/languages/en.yml","hash":"7c91738afbd01239098aec8e09c7e27f014b64de","modified":1709126437109},{"_id":"themes/aircloud/languages/ko.yml","hash":"d729b314c03294b4ce2116a697b289955a429483","modified":1709126437109},{"_id":"themes/aircloud/languages/zh.yml","hash":"110c91155a704a6fc61fbd12253fdfef2a514444","modified":1709126437109},{"_id":"themes/aircloud/layout/about.ejs","hash":"d9e4a98b7bf4d27302ec29098456b4e844bc9984","modified":1709126437110},{"_id":"themes/aircloud/layout/404.ejs","hash":"8a30233a7b99831bd771121b5f450aaba412e8d5","modified":1709126437109},{"_id":"themes/aircloud/layout/archive.ejs","hash":"0f8a062f4f2f0648b23bd8c4a21945a6ca60dc1f","modified":1709126437110},{"_id":"themes/aircloud/layout/collect.ejs","hash":"67256c04cb5c004e776a96412cf1c9e9c8737b93","modified":1709126437110},{"_id":"themes/aircloud/layout/index.ejs","hash":"e5243033bc75f30e954010581025d3cb62fbaff0","modified":1709126437110},{"_id":"themes/aircloud/layout/layout.ejs","hash":"c7504e87317368697c6629f77d7d6f3180901fcb","modified":1709126437111},{"_id":"themes/aircloud/layout/tags.ejs","hash":"fa5918baade50ece0e66d01e78382b69ef342684","modified":1709126437111},{"_id":"themes/aircloud/layout/post.ejs","hash":"cbdb70171d855e57b302c2a282009515d922b5c6","modified":1709126437111},{"_id":"themes/aircloud/layout/_partial/donate.ejs","hash":"81c976a3b7fa5c47ef61181d537220eaf1d55eac","modified":1709126437109},{"_id":"themes/aircloud/layout/_partial/head.ejs","hash":"9fe5ac50c27b143b1bbbeba931bbaf72262feeb8","modified":1709126437109},{"_id":"themes/aircloud/layout/_partial/footer.ejs","hash":"33db88f1b03548c5181c04d44387dc68a9c4cdf6","modified":1709126437109},{"_id":"themes/aircloud/layout/_partial/toc.ejs","hash":"41d11d159011466f0b6272aca9a74df8642b693f","modified":1709126437110},{"_id":"themes/aircloud/layout/_partial/nav.ejs","hash":"fcf6e6fb11e43c6a829359c18b41f160f8980a6d","modified":1709126437110},{"_id":"themes/aircloud/source/_less/archive.less","hash":"5538d38614960e69b97a7f80f38b5933851212b8","modified":1709126437113},{"_id":"themes/aircloud/source/_less/common.less","hash":"ca005799a14271a061da42c07e3dfe071df691d5","modified":1709126437113},{"_id":"themes/aircloud/source/_less/donate.less","hash":"d63139f4aa148bf894afa5c1007a4398696a0e4c","modified":1709126437113},{"_id":"themes/aircloud/source/_less/gitment.less","hash":"916deb8ecdee798d7a9b43b544e31dfd5bbd6de4","modified":1709126437113},{"_id":"themes/aircloud/source/_less/hightlight.less","hash":"cb4cad2f034bd369a858349cec2da3df6ba08e6a","modified":1709126437114},{"_id":"themes/aircloud/source/_less/index.less","hash":"9363ed3f24e82b6b772e1a30a6aef86845821819","modified":1709126437114},{"_id":"themes/aircloud/source/_less/layout.less","hash":"194ac7db2eeee7307fcb7470302f8172100181fb","modified":1709126437114},{"_id":"themes/aircloud/source/_less/nav.less","hash":"534a6e48b3972fbac20027c1823eb89ecb2d893d","modified":1709126437114},{"_id":"themes/aircloud/source/_less/post.less","hash":"64b85a733a38e23cd5d246edd4c4c30c4379a826","modified":1709126437115},{"_id":"themes/aircloud/source/_less/tag.less","hash":"a4c11708a60f5f550a8bc62babeb851048bbbf5d","modified":1709126437115},{"_id":"themes/aircloud/source/_less/variables.less","hash":"0f0fcb50e821d4c102307d613a40314eeee6f7ef","modified":1709126437116},{"_id":"themes/aircloud/source/_less/toc.less","hash":"d3df8520da83c06414c75f31fd2bd333a7517c1f","modified":1709126437115},{"_id":"themes/aircloud/source/css/aircloud.css","hash":"178169dd792ef55b892ddca91c7f92be5f333442","modified":1709126437116},{"_id":"themes/aircloud/source/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1709126437117},{"_id":"themes/aircloud/source/css/aircloud.less","hash":"5a78ae97d259f271fcdee707dc7753adb6b48ac9","modified":1709126437117},{"_id":"themes/aircloud/source/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1709126437117},{"_id":"themes/aircloud/source/js/index.js","hash":"35cb5c8db6452386503171bd8bd80a5298f943ce","modified":1709126437118},{"_id":"themes/aircloud/source/_less/_partial/footer.css","hash":"e00d722211b4695449d72850340ac0dd701d6ede","modified":1709126437112},{"_id":"themes/aircloud/source/_less/_partial/footer.css.map","hash":"9e8d4df5d08425de5a8b247d0dd8b805c6edc661","modified":1709126437112},{"_id":"themes/aircloud/source/_less/_partial/footer.less","hash":"d1469f97daf750f3e4be18c4d640772780c32a75","modified":1709126437113},{"_id":"source/img/donate.jpg","hash":"bae2b0f605495463a161716e35884b9c8f23a7a1","modified":1709126435385},{"_id":"themes/aircloud/source/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1709126437118},{"_id":"source/img/kd.jpg","hash":"37b74057d1c06436c4c8c1b191b86ff6593fca16","modified":1709126435391},{"_id":"source/_posts/meanings.md","hash":"85fdd880300a19b6cc0e5cba678a2027d40c5539","modified":1709192854874}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2024-02-28T13:20:35.351Z","updated":"2024-02-28T13:20:35.351Z","path":"404.html","title":"","comments":1,"_id":"clt5trkb20000gq4nfkg7180k","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","comments":1,"_content":"\nE-mail: onlythen@yeah.net\nBrief：Javascript/Rust\n常用网名：aircloud\n\n除了在本网站外，我还会在[知乎专栏](https://www.zhihu.com/column/aircloud)更新一些个人内容，两者之间内容不完全重合。另外出于一些保密性原因，笔者部分文章无法展示地非常细致，不过如果你遇到了类似的问题，欢迎通过邮箱和我取得进一步的联系。\n\n我的早期博客之一：https://blog.csdn.net/ul646691993/ (早期写的比较混乱，权当记录～)\n\n> 本页会存放一些琐碎个人思考记录\n\n* 2022.11.12\n\n将更多的业务逻辑变成纯函数：\n\n最近在重构某一个业务逻辑，之前的问题主要是状态转换混乱到难以维护，大几千行的代码，各类数据处理逻辑讲状态转换逻辑杂糅在一起，出了问题不好处理不说，性能也比较差。\n\n重构的思路，就是抽离工具代码和状态转换函数，并且使用全局唯一的状态，这次直接把工具函数全都放在独立的文件夹下了，剩余只有 10% 的代码涉及到状态转换，这样之后修改代码的心智负担便非常小：\n\n* 如果修改状态转换，只需要组装无副作用的工具函数生成状态，然后写入唯一状态，利用单向数据流驱动渲染。\n* 如果只是调整逻辑，大部分时候只需要关注一个或者几个工具函数，完全不需要担心其他逻辑。\n\n我认为，这个思想其实并不新，只不过我们在日常开发中，出于开发习惯不好等原因，时常写写就写复杂了。\n\n* 2022.08.24\n\n为了破局，焦虑的开发者渐渐成为“短期速成知识”的收藏者。你以为收藏的是知识，其实收藏的是“知道”，你以为掌握了知识，其实知识囤积了一堆“知道”。\n\n* 2022.06.05\n\n不要忽略哪怕一个微小的不符合预期的细节。\n\n有的时候，当你编写程序的时候，可能会偶尔遇到一些和当前主要专注的事情无关的，或者影响不大的有问题的细节，这个时候一定不要忽略它，深入下去，把它解决，因为它后面很可能会意味着一个更大的问题或者隐患。\n\n* 2022.02.14\n\n当你发现有些事情不对的时候，沉下心来思考一分钟，做出最正确的选择，无论是及时止损还是坚持下去，但一定要记住，理性分析，长期主义。\n\n* 2022.02.06\n\n最近在给一个自己的小开源项目加新功能和单测。发现写单测真的很有用，经常我加完一个功能之后，某个单测就挂了，然后仔细调查发现是一个边界问题。如果没有单元测试，这些问题恐怕需要很久之后才能暴露出来。\n\nTDD 是否有用呢？虽然它已经被**证实**确实有用，但我实际上还是没有彻底实行过一次，希望下个项目可以尝试一下。\n\n* 2022.01.26\n\n人生在世，不能决定的事情比自己能决定的事情要多得多。在自己的能力范围内做正确的决定，然后足够努力，足够坦然就可以了。\n\n* 2021.09.20\n\n我认为，一个比较好的团队文档协作工具，应该能满足以下几个要求：\n\n1. 在线化：随时随地编辑，虽然现在 web 被国内各个大平台割裂了，但仍然是最有效的方式。\n2. 实时协同：如果做的足够到位，甚至可以省略掉很多会议。\n3. 注重内容而非形式：满足基本需求后，本身不提供特别过度的定制，防止出现 ppt 工程师。\n\n在此基础上，每一个规模化发展的团队也许都应该有这样的平台，从而沉淀出一个领域知识库。\n\n* 2021.08.03\n\n**关于鼓励上升**：在一个层级比较多的团队中，高层管理者通常会表示我们鼓励上升，不过具体到实际的工作场景中我们需要注意，即使上升，也优先上升到自己的 leader，特别是在跨团队沟通中，遇到矛盾的时候，直接拉对方的 leader 这种行为可以理解为职场禁忌之一。\n\n* 2021.03.22\n\n感觉有的时候，员工打破边界对于公司来书并不是一个好事情，比如一个客户端的同学，去做 c++ 了，这个时候应该鼓励还是反对呢？实际上这个时候，他除了仅存的业务熟悉度和一些通用的编程能力，c++ 的能力也许就只有应届生的水平，如果从新招聘可能连初试都过不了。公司就必须要承担因为他的编程能力不熟练带来的效率损失，甚至因为更容易引发问题造成更大的损失。\n\n* 2021.01.06\n\n分享在一个工作环境（特别是比较内卷的环境）下工作的两条原则：\n\n* **事不关己原则**：除非有 100% 的把握和你有关或者问题能够在你这里得到解决，否则没有 @ 到你的 OnCall 不要回复，因为如果你回复了大概率这个事情就会由你继续跟进下去，而且我通过近两年的经验发现这些事情都几乎不会让你有所成长，也不会有所产出（当然如果是开放环境下的技术讨论，不在此范畴）。\n* **肯定别人原则**：对于大多数而言，被否定、被质疑、**被秀优越**（这点很重要）通常都是很难受的，比如：当某个同学分享他裸写算法实现的图像处理 Chrome 插件，你立刻打断说可以更快有更好的方法，提及一些更加“高大上”的名词，而且还可以更简单，这个时候可能就不是十分恰当，更恰当的做法我认为是在 QA 环节中做一点进一步的引申，并且先对分享者表示肯定。\n\n<!-- * 2020.06.23\n\n有的时候，感觉机会其实也有很多，但是自己也许在默默流失，年初的时候疫情，带来医药股票的利好，但是自己没有买，春节结束后的第一天，明明是一次风险的释放，自己却也跟着卖了一些，导致损失了收益，其实每次危机中也都蕴藏着商机，希望之后的自己，可以多进行思考。 -->\n\n* 2020.06.01\n\n**延迟反馈：**通常，当我们收到一个用户反馈一个问题的时候，已经有很多用户遇到这个问题了，他们通常默默忍受，或者默默走掉，不做声。并且很可能包括反馈问题的人在内，都已经尝试了很多次，在他们有限的认知下实在没有办法了，才来进行反馈。我们感谢这些发声的用户的同时，也应该审视，自己是否可以更早地发现这些问题。","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ncomments: true\n---\n\nE-mail: onlythen@yeah.net\nBrief：Javascript/Rust\n常用网名：aircloud\n\n除了在本网站外，我还会在[知乎专栏](https://www.zhihu.com/column/aircloud)更新一些个人内容，两者之间内容不完全重合。另外出于一些保密性原因，笔者部分文章无法展示地非常细致，不过如果你遇到了类似的问题，欢迎通过邮箱和我取得进一步的联系。\n\n我的早期博客之一：https://blog.csdn.net/ul646691993/ (早期写的比较混乱，权当记录～)\n\n> 本页会存放一些琐碎个人思考记录\n\n* 2022.11.12\n\n将更多的业务逻辑变成纯函数：\n\n最近在重构某一个业务逻辑，之前的问题主要是状态转换混乱到难以维护，大几千行的代码，各类数据处理逻辑讲状态转换逻辑杂糅在一起，出了问题不好处理不说，性能也比较差。\n\n重构的思路，就是抽离工具代码和状态转换函数，并且使用全局唯一的状态，这次直接把工具函数全都放在独立的文件夹下了，剩余只有 10% 的代码涉及到状态转换，这样之后修改代码的心智负担便非常小：\n\n* 如果修改状态转换，只需要组装无副作用的工具函数生成状态，然后写入唯一状态，利用单向数据流驱动渲染。\n* 如果只是调整逻辑，大部分时候只需要关注一个或者几个工具函数，完全不需要担心其他逻辑。\n\n我认为，这个思想其实并不新，只不过我们在日常开发中，出于开发习惯不好等原因，时常写写就写复杂了。\n\n* 2022.08.24\n\n为了破局，焦虑的开发者渐渐成为“短期速成知识”的收藏者。你以为收藏的是知识，其实收藏的是“知道”，你以为掌握了知识，其实知识囤积了一堆“知道”。\n\n* 2022.06.05\n\n不要忽略哪怕一个微小的不符合预期的细节。\n\n有的时候，当你编写程序的时候，可能会偶尔遇到一些和当前主要专注的事情无关的，或者影响不大的有问题的细节，这个时候一定不要忽略它，深入下去，把它解决，因为它后面很可能会意味着一个更大的问题或者隐患。\n\n* 2022.02.14\n\n当你发现有些事情不对的时候，沉下心来思考一分钟，做出最正确的选择，无论是及时止损还是坚持下去，但一定要记住，理性分析，长期主义。\n\n* 2022.02.06\n\n最近在给一个自己的小开源项目加新功能和单测。发现写单测真的很有用，经常我加完一个功能之后，某个单测就挂了，然后仔细调查发现是一个边界问题。如果没有单元测试，这些问题恐怕需要很久之后才能暴露出来。\n\nTDD 是否有用呢？虽然它已经被**证实**确实有用，但我实际上还是没有彻底实行过一次，希望下个项目可以尝试一下。\n\n* 2022.01.26\n\n人生在世，不能决定的事情比自己能决定的事情要多得多。在自己的能力范围内做正确的决定，然后足够努力，足够坦然就可以了。\n\n* 2021.09.20\n\n我认为，一个比较好的团队文档协作工具，应该能满足以下几个要求：\n\n1. 在线化：随时随地编辑，虽然现在 web 被国内各个大平台割裂了，但仍然是最有效的方式。\n2. 实时协同：如果做的足够到位，甚至可以省略掉很多会议。\n3. 注重内容而非形式：满足基本需求后，本身不提供特别过度的定制，防止出现 ppt 工程师。\n\n在此基础上，每一个规模化发展的团队也许都应该有这样的平台，从而沉淀出一个领域知识库。\n\n* 2021.08.03\n\n**关于鼓励上升**：在一个层级比较多的团队中，高层管理者通常会表示我们鼓励上升，不过具体到实际的工作场景中我们需要注意，即使上升，也优先上升到自己的 leader，特别是在跨团队沟通中，遇到矛盾的时候，直接拉对方的 leader 这种行为可以理解为职场禁忌之一。\n\n* 2021.03.22\n\n感觉有的时候，员工打破边界对于公司来书并不是一个好事情，比如一个客户端的同学，去做 c++ 了，这个时候应该鼓励还是反对呢？实际上这个时候，他除了仅存的业务熟悉度和一些通用的编程能力，c++ 的能力也许就只有应届生的水平，如果从新招聘可能连初试都过不了。公司就必须要承担因为他的编程能力不熟练带来的效率损失，甚至因为更容易引发问题造成更大的损失。\n\n* 2021.01.06\n\n分享在一个工作环境（特别是比较内卷的环境）下工作的两条原则：\n\n* **事不关己原则**：除非有 100% 的把握和你有关或者问题能够在你这里得到解决，否则没有 @ 到你的 OnCall 不要回复，因为如果你回复了大概率这个事情就会由你继续跟进下去，而且我通过近两年的经验发现这些事情都几乎不会让你有所成长，也不会有所产出（当然如果是开放环境下的技术讨论，不在此范畴）。\n* **肯定别人原则**：对于大多数而言，被否定、被质疑、**被秀优越**（这点很重要）通常都是很难受的，比如：当某个同学分享他裸写算法实现的图像处理 Chrome 插件，你立刻打断说可以更快有更好的方法，提及一些更加“高大上”的名词，而且还可以更简单，这个时候可能就不是十分恰当，更恰当的做法我认为是在 QA 环节中做一点进一步的引申，并且先对分享者表示肯定。\n\n<!-- * 2020.06.23\n\n有的时候，感觉机会其实也有很多，但是自己也许在默默流失，年初的时候疫情，带来医药股票的利好，但是自己没有买，春节结束后的第一天，明明是一次风险的释放，自己却也跟着卖了一些，导致损失了收益，其实每次危机中也都蕴藏着商机，希望之后的自己，可以多进行思考。 -->\n\n* 2020.06.01\n\n**延迟反馈：**通常，当我们收到一个用户反馈一个问题的时候，已经有很多用户遇到这个问题了，他们通常默默忍受，或者默默走掉，不做声。并且很可能包括反馈问题的人在内，都已经尝试了很多次，在他们有限的认知下实在没有办法了，才来进行反馈。我们感谢这些发声的用户的同时，也应该审视，自己是否可以更早地发现这些问题。","updated":"2024-02-28T13:20:35.368Z","path":"about/index.html","_id":"clt5trkb70002gq4nhlxibuic","content":"<p>E-mail: <a href=\"mailto:&#x6f;&#x6e;&#108;&#x79;&#116;&#x68;&#101;&#110;&#x40;&#121;&#101;&#97;&#104;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x6e;&#108;&#x79;&#116;&#x68;&#101;&#110;&#x40;&#121;&#101;&#97;&#104;&#x2e;&#x6e;&#x65;&#116;</a><br>Brief：Javascript/Rust<br>常用网名：aircloud</p>\n<p>除了在本网站外，我还会在<a href=\"https://www.zhihu.com/column/aircloud\">知乎专栏</a>更新一些个人内容，两者之间内容不完全重合。另外出于一些保密性原因，笔者部分文章无法展示地非常细致，不过如果你遇到了类似的问题，欢迎通过邮箱和我取得进一步的联系。</p>\n<p>我的早期博客之一：<a href=\"https://blog.csdn.net/ul646691993/\">https://blog.csdn.net/ul646691993/</a> (早期写的比较混乱，权当记录～)</p>\n<blockquote>\n<p>本页会存放一些琐碎个人思考记录</p>\n</blockquote>\n<ul>\n<li>2022.11.12</li>\n</ul>\n<p>将更多的业务逻辑变成纯函数：</p>\n<p>最近在重构某一个业务逻辑，之前的问题主要是状态转换混乱到难以维护，大几千行的代码，各类数据处理逻辑讲状态转换逻辑杂糅在一起，出了问题不好处理不说，性能也比较差。</p>\n<p>重构的思路，就是抽离工具代码和状态转换函数，并且使用全局唯一的状态，这次直接把工具函数全都放在独立的文件夹下了，剩余只有 10% 的代码涉及到状态转换，这样之后修改代码的心智负担便非常小：</p>\n<ul>\n<li>如果修改状态转换，只需要组装无副作用的工具函数生成状态，然后写入唯一状态，利用单向数据流驱动渲染。</li>\n<li>如果只是调整逻辑，大部分时候只需要关注一个或者几个工具函数，完全不需要担心其他逻辑。</li>\n</ul>\n<p>我认为，这个思想其实并不新，只不过我们在日常开发中，出于开发习惯不好等原因，时常写写就写复杂了。</p>\n<ul>\n<li>2022.08.24</li>\n</ul>\n<p>为了破局，焦虑的开发者渐渐成为“短期速成知识”的收藏者。你以为收藏的是知识，其实收藏的是“知道”，你以为掌握了知识，其实知识囤积了一堆“知道”。</p>\n<ul>\n<li>2022.06.05</li>\n</ul>\n<p>不要忽略哪怕一个微小的不符合预期的细节。</p>\n<p>有的时候，当你编写程序的时候，可能会偶尔遇到一些和当前主要专注的事情无关的，或者影响不大的有问题的细节，这个时候一定不要忽略它，深入下去，把它解决，因为它后面很可能会意味着一个更大的问题或者隐患。</p>\n<ul>\n<li>2022.02.14</li>\n</ul>\n<p>当你发现有些事情不对的时候，沉下心来思考一分钟，做出最正确的选择，无论是及时止损还是坚持下去，但一定要记住，理性分析，长期主义。</p>\n<ul>\n<li>2022.02.06</li>\n</ul>\n<p>最近在给一个自己的小开源项目加新功能和单测。发现写单测真的很有用，经常我加完一个功能之后，某个单测就挂了，然后仔细调查发现是一个边界问题。如果没有单元测试，这些问题恐怕需要很久之后才能暴露出来。</p>\n<p>TDD 是否有用呢？虽然它已经被<strong>证实</strong>确实有用，但我实际上还是没有彻底实行过一次，希望下个项目可以尝试一下。</p>\n<ul>\n<li>2022.01.26</li>\n</ul>\n<p>人生在世，不能决定的事情比自己能决定的事情要多得多。在自己的能力范围内做正确的决定，然后足够努力，足够坦然就可以了。</p>\n<ul>\n<li>2021.09.20</li>\n</ul>\n<p>我认为，一个比较好的团队文档协作工具，应该能满足以下几个要求：</p>\n<ol>\n<li>在线化：随时随地编辑，虽然现在 web 被国内各个大平台割裂了，但仍然是最有效的方式。</li>\n<li>实时协同：如果做的足够到位，甚至可以省略掉很多会议。</li>\n<li>注重内容而非形式：满足基本需求后，本身不提供特别过度的定制，防止出现 ppt 工程师。</li>\n</ol>\n<p>在此基础上，每一个规模化发展的团队也许都应该有这样的平台，从而沉淀出一个领域知识库。</p>\n<ul>\n<li>2021.08.03</li>\n</ul>\n<p><strong>关于鼓励上升</strong>：在一个层级比较多的团队中，高层管理者通常会表示我们鼓励上升，不过具体到实际的工作场景中我们需要注意，即使上升，也优先上升到自己的 leader，特别是在跨团队沟通中，遇到矛盾的时候，直接拉对方的 leader 这种行为可以理解为职场禁忌之一。</p>\n<ul>\n<li>2021.03.22</li>\n</ul>\n<p>感觉有的时候，员工打破边界对于公司来书并不是一个好事情，比如一个客户端的同学，去做 c++ 了，这个时候应该鼓励还是反对呢？实际上这个时候，他除了仅存的业务熟悉度和一些通用的编程能力，c++ 的能力也许就只有应届生的水平，如果从新招聘可能连初试都过不了。公司就必须要承担因为他的编程能力不熟练带来的效率损失，甚至因为更容易引发问题造成更大的损失。</p>\n<ul>\n<li>2021.01.06</li>\n</ul>\n<p>分享在一个工作环境（特别是比较内卷的环境）下工作的两条原则：</p>\n<ul>\n<li><strong>事不关己原则</strong>：除非有 100% 的把握和你有关或者问题能够在你这里得到解决，否则没有 @ 到你的 OnCall 不要回复，因为如果你回复了大概率这个事情就会由你继续跟进下去，而且我通过近两年的经验发现这些事情都几乎不会让你有所成长，也不会有所产出（当然如果是开放环境下的技术讨论，不在此范畴）。</li>\n<li><strong>肯定别人原则</strong>：对于大多数而言，被否定、被质疑、<strong>被秀优越</strong>（这点很重要）通常都是很难受的，比如：当某个同学分享他裸写算法实现的图像处理 Chrome 插件，你立刻打断说可以更快有更好的方法，提及一些更加“高大上”的名词，而且还可以更简单，这个时候可能就不是十分恰当，更恰当的做法我认为是在 QA 环节中做一点进一步的引申，并且先对分享者表示肯定。</li>\n</ul>\n<!-- * 2020.06.23\n\n有的时候，感觉机会其实也有很多，但是自己也许在默默流失，年初的时候疫情，带来医药股票的利好，但是自己没有买，春节结束后的第一天，明明是一次风险的释放，自己却也跟着卖了一些，导致损失了收益，其实每次危机中也都蕴藏着商机，希望之后的自己，可以多进行思考。 -->\n\n<ul>\n<li>2020.06.01</li>\n</ul>\n<p><strong>延迟反馈：</strong>通常，当我们收到一个用户反馈一个问题的时候，已经有很多用户遇到这个问题了，他们通常默默忍受，或者默默走掉，不做声。并且很可能包括反馈问题的人在内，都已经尝试了很多次，在他们有限的认知下实在没有办法了，才来进行反馈。我们感谢这些发声的用户的同时，也应该审视，自己是否可以更早地发现这些问题。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>E-mail: <a href=\"mailto:&#x6f;&#x6e;&#108;&#x79;&#116;&#x68;&#101;&#110;&#x40;&#121;&#101;&#97;&#104;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x6e;&#108;&#x79;&#116;&#x68;&#101;&#110;&#x40;&#121;&#101;&#97;&#104;&#x2e;&#x6e;&#x65;&#116;</a><br>Brief：Javascript/Rust<br>常用网名：aircloud</p>\n<p>除了在本网站外，我还会在<a href=\"https://www.zhihu.com/column/aircloud\">知乎专栏</a>更新一些个人内容，两者之间内容不完全重合。另外出于一些保密性原因，笔者部分文章无法展示地非常细致，不过如果你遇到了类似的问题，欢迎通过邮箱和我取得进一步的联系。</p>\n<p>我的早期博客之一：<a href=\"https://blog.csdn.net/ul646691993/\">https://blog.csdn.net/ul646691993/</a> (早期写的比较混乱，权当记录～)</p>\n<blockquote>\n<p>本页会存放一些琐碎个人思考记录</p>\n</blockquote>\n<ul>\n<li>2022.11.12</li>\n</ul>\n<p>将更多的业务逻辑变成纯函数：</p>\n<p>最近在重构某一个业务逻辑，之前的问题主要是状态转换混乱到难以维护，大几千行的代码，各类数据处理逻辑讲状态转换逻辑杂糅在一起，出了问题不好处理不说，性能也比较差。</p>\n<p>重构的思路，就是抽离工具代码和状态转换函数，并且使用全局唯一的状态，这次直接把工具函数全都放在独立的文件夹下了，剩余只有 10% 的代码涉及到状态转换，这样之后修改代码的心智负担便非常小：</p>\n<ul>\n<li>如果修改状态转换，只需要组装无副作用的工具函数生成状态，然后写入唯一状态，利用单向数据流驱动渲染。</li>\n<li>如果只是调整逻辑，大部分时候只需要关注一个或者几个工具函数，完全不需要担心其他逻辑。</li>\n</ul>\n<p>我认为，这个思想其实并不新，只不过我们在日常开发中，出于开发习惯不好等原因，时常写写就写复杂了。</p>\n<ul>\n<li>2022.08.24</li>\n</ul>\n<p>为了破局，焦虑的开发者渐渐成为“短期速成知识”的收藏者。你以为收藏的是知识，其实收藏的是“知道”，你以为掌握了知识，其实知识囤积了一堆“知道”。</p>\n<ul>\n<li>2022.06.05</li>\n</ul>\n<p>不要忽略哪怕一个微小的不符合预期的细节。</p>\n<p>有的时候，当你编写程序的时候，可能会偶尔遇到一些和当前主要专注的事情无关的，或者影响不大的有问题的细节，这个时候一定不要忽略它，深入下去，把它解决，因为它后面很可能会意味着一个更大的问题或者隐患。</p>\n<ul>\n<li>2022.02.14</li>\n</ul>\n<p>当你发现有些事情不对的时候，沉下心来思考一分钟，做出最正确的选择，无论是及时止损还是坚持下去，但一定要记住，理性分析，长期主义。</p>\n<ul>\n<li>2022.02.06</li>\n</ul>\n<p>最近在给一个自己的小开源项目加新功能和单测。发现写单测真的很有用，经常我加完一个功能之后，某个单测就挂了，然后仔细调查发现是一个边界问题。如果没有单元测试，这些问题恐怕需要很久之后才能暴露出来。</p>\n<p>TDD 是否有用呢？虽然它已经被<strong>证实</strong>确实有用，但我实际上还是没有彻底实行过一次，希望下个项目可以尝试一下。</p>\n<ul>\n<li>2022.01.26</li>\n</ul>\n<p>人生在世，不能决定的事情比自己能决定的事情要多得多。在自己的能力范围内做正确的决定，然后足够努力，足够坦然就可以了。</p>\n<ul>\n<li>2021.09.20</li>\n</ul>\n<p>我认为，一个比较好的团队文档协作工具，应该能满足以下几个要求：</p>\n<ol>\n<li>在线化：随时随地编辑，虽然现在 web 被国内各个大平台割裂了，但仍然是最有效的方式。</li>\n<li>实时协同：如果做的足够到位，甚至可以省略掉很多会议。</li>\n<li>注重内容而非形式：满足基本需求后，本身不提供特别过度的定制，防止出现 ppt 工程师。</li>\n</ol>\n<p>在此基础上，每一个规模化发展的团队也许都应该有这样的平台，从而沉淀出一个领域知识库。</p>\n<ul>\n<li>2021.08.03</li>\n</ul>\n<p><strong>关于鼓励上升</strong>：在一个层级比较多的团队中，高层管理者通常会表示我们鼓励上升，不过具体到实际的工作场景中我们需要注意，即使上升，也优先上升到自己的 leader，特别是在跨团队沟通中，遇到矛盾的时候，直接拉对方的 leader 这种行为可以理解为职场禁忌之一。</p>\n<ul>\n<li>2021.03.22</li>\n</ul>\n<p>感觉有的时候，员工打破边界对于公司来书并不是一个好事情，比如一个客户端的同学，去做 c++ 了，这个时候应该鼓励还是反对呢？实际上这个时候，他除了仅存的业务熟悉度和一些通用的编程能力，c++ 的能力也许就只有应届生的水平，如果从新招聘可能连初试都过不了。公司就必须要承担因为他的编程能力不熟练带来的效率损失，甚至因为更容易引发问题造成更大的损失。</p>\n<ul>\n<li>2021.01.06</li>\n</ul>\n<p>分享在一个工作环境（特别是比较内卷的环境）下工作的两条原则：</p>\n<ul>\n<li><strong>事不关己原则</strong>：除非有 100% 的把握和你有关或者问题能够在你这里得到解决，否则没有 @ 到你的 OnCall 不要回复，因为如果你回复了大概率这个事情就会由你继续跟进下去，而且我通过近两年的经验发现这些事情都几乎不会让你有所成长，也不会有所产出（当然如果是开放环境下的技术讨论，不在此范畴）。</li>\n<li><strong>肯定别人原则</strong>：对于大多数而言，被否定、被质疑、<strong>被秀优越</strong>（这点很重要）通常都是很难受的，比如：当某个同学分享他裸写算法实现的图像处理 Chrome 插件，你立刻打断说可以更快有更好的方法，提及一些更加“高大上”的名词，而且还可以更简单，这个时候可能就不是十分恰当，更恰当的做法我认为是在 QA 环节中做一点进一步的引申，并且先对分享者表示肯定。</li>\n</ul>\n<!-- * 2020.06.23\n\n有的时候，感觉机会其实也有很多，但是自己也许在默默流失，年初的时候疫情，带来医药股票的利好，但是自己没有买，春节结束后的第一天，明明是一次风险的释放，自己却也跟着卖了一些，导致损失了收益，其实每次危机中也都蕴藏着商机，希望之后的自己，可以多进行思考。 -->\n\n<ul>\n<li>2020.06.01</li>\n</ul>\n<p><strong>延迟反馈：</strong>通常，当我们收到一个用户反馈一个问题的时候，已经有很多用户遇到这个问题了，他们通常默默忍受，或者默默走掉，不做声。并且很可能包括反馈问题的人在内，都已经尝试了很多次，在他们有限的认知下实在没有办法了，才来进行反馈。我们感谢这些发声的用户的同时，也应该审视，自己是否可以更早地发现这些问题。</p>\n"},{"layout":"collect","title":"我的收藏","comments":0,"_content":"\n> 由于自己较早制作的收藏夹对应的数据库被删除了，所以这里已经遗失了大部分内容，目前仅仅记录近期的一些收藏内容 _from 2021.09_\n\n### 优秀博客\n\n- Figma 的技术博客：https://www.figma.com/blog/section/engineering/\n- Laysent 的博客：https://laysent.com/blog\n\n### 综合性能优化\n\n- 如何让你的 web 应用提高十倍的性能：https://blog.csdn.net/lilizhou2008/article/details/108613074\n\n### 操作系统\n\n- GPU 行业研究报告：[链接地址](https://news.alphalio.cn/PDF/20210306-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8%E7%94%B5%E5%AD%90%E8%A1%8C%E4%B8%9A%E6%B7%B1%E5%BA%A6%E6%8A%A5%E5%91%8A%EF%BC%9AGPU%E7%A0%94%E7%A9%B6%E6%A1%86%E6%9E%B6.pdf)\n\n### 前端\n\n- useEffect 的无限循环陷阱：https://zhuanlan.zhihu.com/p/412283445\n- useEffect 的不更新陷阱：https://zhuanlan.zhihu.com/p/84697185\n- 增量 DOM 与虚拟 DOM 的对比使用：https://juejin.cn/post/6903765877296988174\n- react 运行时优化：https://juejin.cn/post/7010539227284766751\n- astro：组件级别的动态加载 (相对于 webpack 文件级别的更灵活)，可以通过可见性、路由等触发；可以直接混合使用 React/Vue 等多种前端框架。以及还有一些其他的小的特性，比如顶层 await 支持：https://astro.build/\n\n### 安全\n\n- JavaScript 原型链污染攻击：https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto__\n\n### Node.js\n\n- 一文看懂 npm、yarn、pnpm 之间的区别：https://juejin.cn/post/6844903616109641736\n- Why should we use pnpm (主要是使用了符号链接，所以更加快了)：https://www.kochan.io/nodejs/why-should-we-use-pnpm.html\n- Node.JS 地下铁 https://subway.midwayjs.org/season-11.html\n\n### python\n\n- python 中几种构建模型方法的区别：https://zhuanlan.zhihu.com/p/144400422\n- 一文弄懂 Pytorch 的 DataLoader, DataSet, Sampler 之间的关系：https://www.cnblogs.com/marsggbo/p/11308889.html\n- 自定义 pytorch 中的 sampler：https://cloud.tencent.com/developer/article/1728103\n- PyTorch 源码解读之 DP & DDP：模型并行和分布式训练解析：https://zhuanlan.zhihu.com/p/343951042\n- pytorch 分布式数据并行 DistributedDataParallel（DDP）：https://zhuanlan.zhihu.com/p/107139605\n- (比较适合 torch 入门)PyTorch 分布式训练基础--DDP 使用：https://zhuanlan.zhihu.com/p/358974461\n- Understanding LSTM Networks：http://colah.github.io/posts/2015-08-Understanding-LSTMs/\n\n### 数据库\n\n- NoSQL 数据库技术选型：https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html\n\n### CodeMod\n\nCodeMod 是一个代码转换术语，以下两个项目比较适合做这个事情\n\n- gogocode https://github.com/thx/gogocode/blob/main/README-cn.md\n- jscodeshift https://github.com/facebook/jscodeshift\n\n### 交互\n\n- 顶配级拖拽体验 https://zhuanlan.zhihu.com/p/505956645\n\n### 视觉\n\n- 免费高清无版权网站 https://pixabay.com/zh/\n\n### 工具\n\n- tldr：一个很简单的可以命令行 help 工具：https://tldr.sh/\n","source":"collect/index.md","raw":"---\nlayout: \"collect\"\ntitle: \"我的收藏\"\ncomments: false\n---\n\n> 由于自己较早制作的收藏夹对应的数据库被删除了，所以这里已经遗失了大部分内容，目前仅仅记录近期的一些收藏内容 _from 2021.09_\n\n### 优秀博客\n\n- Figma 的技术博客：https://www.figma.com/blog/section/engineering/\n- Laysent 的博客：https://laysent.com/blog\n\n### 综合性能优化\n\n- 如何让你的 web 应用提高十倍的性能：https://blog.csdn.net/lilizhou2008/article/details/108613074\n\n### 操作系统\n\n- GPU 行业研究报告：[链接地址](https://news.alphalio.cn/PDF/20210306-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8%E7%94%B5%E5%AD%90%E8%A1%8C%E4%B8%9A%E6%B7%B1%E5%BA%A6%E6%8A%A5%E5%91%8A%EF%BC%9AGPU%E7%A0%94%E7%A9%B6%E6%A1%86%E6%9E%B6.pdf)\n\n### 前端\n\n- useEffect 的无限循环陷阱：https://zhuanlan.zhihu.com/p/412283445\n- useEffect 的不更新陷阱：https://zhuanlan.zhihu.com/p/84697185\n- 增量 DOM 与虚拟 DOM 的对比使用：https://juejin.cn/post/6903765877296988174\n- react 运行时优化：https://juejin.cn/post/7010539227284766751\n- astro：组件级别的动态加载 (相对于 webpack 文件级别的更灵活)，可以通过可见性、路由等触发；可以直接混合使用 React/Vue 等多种前端框架。以及还有一些其他的小的特性，比如顶层 await 支持：https://astro.build/\n\n### 安全\n\n- JavaScript 原型链污染攻击：https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto__\n\n### Node.js\n\n- 一文看懂 npm、yarn、pnpm 之间的区别：https://juejin.cn/post/6844903616109641736\n- Why should we use pnpm (主要是使用了符号链接，所以更加快了)：https://www.kochan.io/nodejs/why-should-we-use-pnpm.html\n- Node.JS 地下铁 https://subway.midwayjs.org/season-11.html\n\n### python\n\n- python 中几种构建模型方法的区别：https://zhuanlan.zhihu.com/p/144400422\n- 一文弄懂 Pytorch 的 DataLoader, DataSet, Sampler 之间的关系：https://www.cnblogs.com/marsggbo/p/11308889.html\n- 自定义 pytorch 中的 sampler：https://cloud.tencent.com/developer/article/1728103\n- PyTorch 源码解读之 DP & DDP：模型并行和分布式训练解析：https://zhuanlan.zhihu.com/p/343951042\n- pytorch 分布式数据并行 DistributedDataParallel（DDP）：https://zhuanlan.zhihu.com/p/107139605\n- (比较适合 torch 入门)PyTorch 分布式训练基础--DDP 使用：https://zhuanlan.zhihu.com/p/358974461\n- Understanding LSTM Networks：http://colah.github.io/posts/2015-08-Understanding-LSTMs/\n\n### 数据库\n\n- NoSQL 数据库技术选型：https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html\n\n### CodeMod\n\nCodeMod 是一个代码转换术语，以下两个项目比较适合做这个事情\n\n- gogocode https://github.com/thx/gogocode/blob/main/README-cn.md\n- jscodeshift https://github.com/facebook/jscodeshift\n\n### 交互\n\n- 顶配级拖拽体验 https://zhuanlan.zhihu.com/p/505956645\n\n### 视觉\n\n- 免费高清无版权网站 https://pixabay.com/zh/\n\n### 工具\n\n- tldr：一个很简单的可以命令行 help 工具：https://tldr.sh/\n","date":"2024-02-28T13:20:35.369Z","updated":"2024-02-28T13:20:35.369Z","path":"collect/index.html","_id":"clt5trkb90005gq4n4fw0fbe8","content":"<blockquote>\n<p>由于自己较早制作的收藏夹对应的数据库被删除了，所以这里已经遗失了大部分内容，目前仅仅记录近期的一些收藏内容 <em>from 2021.09</em></p>\n</blockquote>\n<h3 id=\"优秀博客\"><a href=\"#优秀博客\" class=\"headerlink\" title=\"优秀博客\"></a>优秀博客</h3><ul>\n<li>Figma 的技术博客：<a href=\"https://www.figma.com/blog/section/engineering/\">https://www.figma.com/blog/section/engineering/</a></li>\n<li>Laysent 的博客：<a href=\"https://laysent.com/blog\">https://laysent.com/blog</a></li>\n</ul>\n<h3 id=\"综合性能优化\"><a href=\"#综合性能优化\" class=\"headerlink\" title=\"综合性能优化\"></a>综合性能优化</h3><ul>\n<li>如何让你的 web 应用提高十倍的性能：<a href=\"https://blog.csdn.net/lilizhou2008/article/details/108613074\">https://blog.csdn.net/lilizhou2008/article/details/108613074</a></li>\n</ul>\n<h3 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h3><ul>\n<li>GPU 行业研究报告：<a href=\"https://news.alphalio.cn/PDF/20210306-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8%E7%94%B5%E5%AD%90%E8%A1%8C%E4%B8%9A%E6%B7%B1%E5%BA%A6%E6%8A%A5%E5%91%8A%EF%BC%9AGPU%E7%A0%94%E7%A9%B6%E6%A1%86%E6%9E%B6.pdf\">链接地址</a></li>\n</ul>\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ul>\n<li>useEffect 的无限循环陷阱：<a href=\"https://zhuanlan.zhihu.com/p/412283445\">https://zhuanlan.zhihu.com/p/412283445</a></li>\n<li>useEffect 的不更新陷阱：<a href=\"https://zhuanlan.zhihu.com/p/84697185\">https://zhuanlan.zhihu.com/p/84697185</a></li>\n<li>增量 DOM 与虚拟 DOM 的对比使用：<a href=\"https://juejin.cn/post/6903765877296988174\">https://juejin.cn/post/6903765877296988174</a></li>\n<li>react 运行时优化：<a href=\"https://juejin.cn/post/7010539227284766751\">https://juejin.cn/post/7010539227284766751</a></li>\n<li>astro：组件级别的动态加载 (相对于 webpack 文件级别的更灵活)，可以通过可见性、路由等触发；可以直接混合使用 React/Vue 等多种前端框架。以及还有一些其他的小的特性，比如顶层 await 支持：<a href=\"https://astro.build/\">https://astro.build/</a></li>\n</ul>\n<h3 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h3><ul>\n<li>JavaScript 原型链污染攻击：<a href=\"https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto\">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto</a>__</li>\n</ul>\n<h3 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h3><ul>\n<li>一文看懂 npm、yarn、pnpm 之间的区别：<a href=\"https://juejin.cn/post/6844903616109641736\">https://juejin.cn/post/6844903616109641736</a></li>\n<li>Why should we use pnpm (主要是使用了符号链接，所以更加快了)：<a href=\"https://www.kochan.io/nodejs/why-should-we-use-pnpm.html\">https://www.kochan.io/nodejs/why-should-we-use-pnpm.html</a></li>\n<li>Node.JS 地下铁 <a href=\"https://subway.midwayjs.org/season-11.html\">https://subway.midwayjs.org/season-11.html</a></li>\n</ul>\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h3><ul>\n<li>python 中几种构建模型方法的区别：<a href=\"https://zhuanlan.zhihu.com/p/144400422\">https://zhuanlan.zhihu.com/p/144400422</a></li>\n<li>一文弄懂 Pytorch 的 DataLoader, DataSet, Sampler 之间的关系：<a href=\"https://www.cnblogs.com/marsggbo/p/11308889.html\">https://www.cnblogs.com/marsggbo/p/11308889.html</a></li>\n<li>自定义 pytorch 中的 sampler：<a href=\"https://cloud.tencent.com/developer/article/1728103\">https://cloud.tencent.com/developer/article/1728103</a></li>\n<li>PyTorch 源码解读之 DP &amp; DDP：模型并行和分布式训练解析：<a href=\"https://zhuanlan.zhihu.com/p/343951042\">https://zhuanlan.zhihu.com/p/343951042</a></li>\n<li>pytorch 分布式数据并行 DistributedDataParallel（DDP）：<a href=\"https://zhuanlan.zhihu.com/p/107139605\">https://zhuanlan.zhihu.com/p/107139605</a></li>\n<li>(比较适合 torch 入门)PyTorch 分布式训练基础–DDP 使用：<a href=\"https://zhuanlan.zhihu.com/p/358974461\">https://zhuanlan.zhihu.com/p/358974461</a></li>\n<li>Understanding LSTM Networks：<a href=\"http://colah.github.io/posts/2015-08-Understanding-LSTMs/\">http://colah.github.io/posts/2015-08-Understanding-LSTMs/</a></li>\n</ul>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><ul>\n<li>NoSQL 数据库技术选型：<a href=\"https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html\">https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html</a></li>\n</ul>\n<h3 id=\"CodeMod\"><a href=\"#CodeMod\" class=\"headerlink\" title=\"CodeMod\"></a>CodeMod</h3><p>CodeMod 是一个代码转换术语，以下两个项目比较适合做这个事情</p>\n<ul>\n<li>gogocode <a href=\"https://github.com/thx/gogocode/blob/main/README-cn.md\">https://github.com/thx/gogocode/blob/main/README-cn.md</a></li>\n<li>jscodeshift <a href=\"https://github.com/facebook/jscodeshift\">https://github.com/facebook/jscodeshift</a></li>\n</ul>\n<h3 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h3><ul>\n<li>顶配级拖拽体验 <a href=\"https://zhuanlan.zhihu.com/p/505956645\">https://zhuanlan.zhihu.com/p/505956645</a></li>\n</ul>\n<h3 id=\"视觉\"><a href=\"#视觉\" class=\"headerlink\" title=\"视觉\"></a>视觉</h3><ul>\n<li>免费高清无版权网站 <a href=\"https://pixabay.com/zh/\">https://pixabay.com/zh/</a></li>\n</ul>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><ul>\n<li>tldr：一个很简单的可以命令行 help 工具：<a href=\"https://tldr.sh/\">https://tldr.sh/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>由于自己较早制作的收藏夹对应的数据库被删除了，所以这里已经遗失了大部分内容，目前仅仅记录近期的一些收藏内容 <em>from 2021.09</em></p>\n</blockquote>\n<h3 id=\"优秀博客\"><a href=\"#优秀博客\" class=\"headerlink\" title=\"优秀博客\"></a>优秀博客</h3><ul>\n<li>Figma 的技术博客：<a href=\"https://www.figma.com/blog/section/engineering/\">https://www.figma.com/blog/section/engineering/</a></li>\n<li>Laysent 的博客：<a href=\"https://laysent.com/blog\">https://laysent.com/blog</a></li>\n</ul>\n<h3 id=\"综合性能优化\"><a href=\"#综合性能优化\" class=\"headerlink\" title=\"综合性能优化\"></a>综合性能优化</h3><ul>\n<li>如何让你的 web 应用提高十倍的性能：<a href=\"https://blog.csdn.net/lilizhou2008/article/details/108613074\">https://blog.csdn.net/lilizhou2008/article/details/108613074</a></li>\n</ul>\n<h3 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h3><ul>\n<li>GPU 行业研究报告：<a href=\"https://news.alphalio.cn/PDF/20210306-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8-%E6%96%B9%E6%AD%A3%E8%AF%81%E5%88%B8%E7%94%B5%E5%AD%90%E8%A1%8C%E4%B8%9A%E6%B7%B1%E5%BA%A6%E6%8A%A5%E5%91%8A%EF%BC%9AGPU%E7%A0%94%E7%A9%B6%E6%A1%86%E6%9E%B6.pdf\">链接地址</a></li>\n</ul>\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ul>\n<li>useEffect 的无限循环陷阱：<a href=\"https://zhuanlan.zhihu.com/p/412283445\">https://zhuanlan.zhihu.com/p/412283445</a></li>\n<li>useEffect 的不更新陷阱：<a href=\"https://zhuanlan.zhihu.com/p/84697185\">https://zhuanlan.zhihu.com/p/84697185</a></li>\n<li>增量 DOM 与虚拟 DOM 的对比使用：<a href=\"https://juejin.cn/post/6903765877296988174\">https://juejin.cn/post/6903765877296988174</a></li>\n<li>react 运行时优化：<a href=\"https://juejin.cn/post/7010539227284766751\">https://juejin.cn/post/7010539227284766751</a></li>\n<li>astro：组件级别的动态加载 (相对于 webpack 文件级别的更灵活)，可以通过可见性、路由等触发；可以直接混合使用 React/Vue 等多种前端框架。以及还有一些其他的小的特性，比如顶层 await 支持：<a href=\"https://astro.build/\">https://astro.build/</a></li>\n</ul>\n<h3 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h3><ul>\n<li>JavaScript 原型链污染攻击：<a href=\"https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto\">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto</a>__</li>\n</ul>\n<h3 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h3><ul>\n<li>一文看懂 npm、yarn、pnpm 之间的区别：<a href=\"https://juejin.cn/post/6844903616109641736\">https://juejin.cn/post/6844903616109641736</a></li>\n<li>Why should we use pnpm (主要是使用了符号链接，所以更加快了)：<a href=\"https://www.kochan.io/nodejs/why-should-we-use-pnpm.html\">https://www.kochan.io/nodejs/why-should-we-use-pnpm.html</a></li>\n<li>Node.JS 地下铁 <a href=\"https://subway.midwayjs.org/season-11.html\">https://subway.midwayjs.org/season-11.html</a></li>\n</ul>\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h3><ul>\n<li>python 中几种构建模型方法的区别：<a href=\"https://zhuanlan.zhihu.com/p/144400422\">https://zhuanlan.zhihu.com/p/144400422</a></li>\n<li>一文弄懂 Pytorch 的 DataLoader, DataSet, Sampler 之间的关系：<a href=\"https://www.cnblogs.com/marsggbo/p/11308889.html\">https://www.cnblogs.com/marsggbo/p/11308889.html</a></li>\n<li>自定义 pytorch 中的 sampler：<a href=\"https://cloud.tencent.com/developer/article/1728103\">https://cloud.tencent.com/developer/article/1728103</a></li>\n<li>PyTorch 源码解读之 DP &amp; DDP：模型并行和分布式训练解析：<a href=\"https://zhuanlan.zhihu.com/p/343951042\">https://zhuanlan.zhihu.com/p/343951042</a></li>\n<li>pytorch 分布式数据并行 DistributedDataParallel（DDP）：<a href=\"https://zhuanlan.zhihu.com/p/107139605\">https://zhuanlan.zhihu.com/p/107139605</a></li>\n<li>(比较适合 torch 入门)PyTorch 分布式训练基础–DDP 使用：<a href=\"https://zhuanlan.zhihu.com/p/358974461\">https://zhuanlan.zhihu.com/p/358974461</a></li>\n<li>Understanding LSTM Networks：<a href=\"http://colah.github.io/posts/2015-08-Understanding-LSTMs/\">http://colah.github.io/posts/2015-08-Understanding-LSTMs/</a></li>\n</ul>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><ul>\n<li>NoSQL 数据库技术选型：<a href=\"https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html\">https://dunwu.github.io/db-tutorial/nosql/nosql-selection.html</a></li>\n</ul>\n<h3 id=\"CodeMod\"><a href=\"#CodeMod\" class=\"headerlink\" title=\"CodeMod\"></a>CodeMod</h3><p>CodeMod 是一个代码转换术语，以下两个项目比较适合做这个事情</p>\n<ul>\n<li>gogocode <a href=\"https://github.com/thx/gogocode/blob/main/README-cn.md\">https://github.com/thx/gogocode/blob/main/README-cn.md</a></li>\n<li>jscodeshift <a href=\"https://github.com/facebook/jscodeshift\">https://github.com/facebook/jscodeshift</a></li>\n</ul>\n<h3 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h3><ul>\n<li>顶配级拖拽体验 <a href=\"https://zhuanlan.zhihu.com/p/505956645\">https://zhuanlan.zhihu.com/p/505956645</a></li>\n</ul>\n<h3 id=\"视觉\"><a href=\"#视觉\" class=\"headerlink\" title=\"视觉\"></a>视觉</h3><ul>\n<li>免费高清无版权网站 <a href=\"https://pixabay.com/zh/\">https://pixabay.com/zh/</a></li>\n</ul>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><ul>\n<li>tldr：一个很简单的可以命令行 help 工具：<a href=\"https://tldr.sh/\">https://tldr.sh/</a></li>\n</ul>\n"},{"layout":"tags","title":"Tags","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\n---\n","date":"2024-02-28T13:20:35.395Z","updated":"2024-02-28T13:20:35.395Z","path":"tags/index.html","comments":1,"_id":"clt5trkba0007gq4n4aqyg2d8","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"meanings","date":"2024-02-29T07:41:51.000Z","_content":"无意义是意义的秤砣。","source":"_posts/meanings.md","raw":"---\ntitle: meanings\ndate: 2024-02-29 15:41:51\ntags:\n    - 东隅已逝\n---\n无意义是意义的秤砣。","slug":"meanings","published":1,"updated":"2024-02-29T07:47:34.874Z","_id":"clt6x6fn40000f34n4m58dkuj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>无意义是意义的秤砣。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>无意义是意义的秤砣。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clt6x6fn40000f34n4m58dkuj","tag_id":"clt6x6fn70001f34n8i2yc5bg","_id":"clt6x6fn80002f34n6polccm3"}],"Tag":[{"name":"centOS","_id":"clt5trkb80004gq4ngyso17a8"},{"name":"redis","_id":"clt5trkbc000agq4n3pcd0zlq"},{"name":"Node.js","_id":"clt5trkbf000igq4ndro01pzr"},{"name":"前端框架","_id":"clt5trkbg000lgq4n2kczc4vg"},{"name":"javascript","_id":"clt5trkbh000qgq4n1lj17ab8"},{"name":"Linux","_id":"clt5trkbi000vgq4ncccv7ajl"},{"name":"ssh","_id":"clt5trkbj0010gq4n6z8x0i4h"},{"name":"TCP","_id":"clt5trkbk0013gq4na5cn384n"},{"name":"PWA","_id":"clt5trkbm001cgq4nc9k7dizq"},{"name":"React","_id":"clt5trkbn001igq4n70aq95ae"},{"name":"Rust","_id":"clt5trkbo001mgq4n28li481q"},{"name":"nginx","_id":"clt5trkbp001qgq4n2i89b2em"},{"name":"前端综合","_id":"clt5trkbq0020gq4n5t5ygf1c"},{"name":"Typescript","_id":"clt5trkbt002egq4nb57m3wjq"},{"name":"前端构建","_id":"clt5trkbu002igq4n4gcxezwa"},{"name":"跨端融合","_id":"clt5trkbu002lgq4nfuj37ggr"},{"name":"读书笔记","_id":"clt5trkbv002ngq4nh8ji79pz"},{"name":"编程综合","_id":"clt5trkbv002pgq4n9qk97bb0"},{"name":"前端监控","_id":"clt5trkbv002vgq4nc1wxexvn"},{"name":"Rx.js","_id":"clt5trkbw0030gq4n4lgf095c"},{"name":"OpenCV","_id":"clt5trkbw0032gq4n9q6z574f"},{"name":"测试","_id":"clt5trkbw0038gq4ndrdt8ne9"},{"name":"WebAssembly","_id":"clt5trkbw003agq4ngx9abysw"},{"name":"组件化","_id":"clt5trkbx003ggq4ndc0m392j"},{"name":"MVVM","_id":"clt5trkbx003kgq4nbgry76l0"},{"name":"架构","_id":"clt5trkby003mgq4n4l6ddtu4"},{"name":"Vue","_id":"clt5trkby003pgq4n8vh2abxa"},{"name":"viola","_id":"clt5trkby003sgq4n6tt39u34"},{"name":"性能优化","_id":"clt5trkby003tgq4ne7hffisl"},{"name":"ShadowSocks","_id":"clt5trkbz0040gq4n1hs15ypv"},{"name":"东隅已逝","_id":"clt6x6fn70001f34n8i2yc5bg"}]}}